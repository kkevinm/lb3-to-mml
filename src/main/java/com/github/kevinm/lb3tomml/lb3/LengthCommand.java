package com.github.kevinm.lb3tomml.lb3;

import com.github.kevinm.lb3tomml.mml.MmlCommand;
import com.github.kevinm.lb3tomml.util.Log;

public class LengthCommand extends HexCommand {

    private static final int[] LENGTH_TABLE = {
            0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,
            0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f,0x10,
            0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,
            0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f,0x20,
            0x24,0x30,0xc0,0x60,0x90,0x48,0x9c,0xac,
            0x3c,0xa8,0x6c,0xe4,0x78,0xf0,0x2d,0x40,
            0x70,0xa0,0xb0,0xfe,0x80,0x54,0x5c,0xd8,
            0x28,0x38,0x50,0x84,0xbe,0xb4,0xcc,0x00,
    };

    protected LengthCommand(int value) {
        super(value);
        
        if (value < 0x80 || value > 0xbf) {
            throw new IllegalArgumentException(String.format("Invalid length command: 0x%02x", value));
        }
    }
    
    public int getLength() {
        return LENGTH_TABLE[value & 0x7f];
    }

    @Override
    public MmlCommand process(SongChannel channel) {
        Log.log("Processing length command 0x%02x", value);
        Log.logIndent("Setting note length to %d", getLength());
        
        channel.setCurrentLength(getLength());
        return MmlCommand.empty();
    }
    
}
